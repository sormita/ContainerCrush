apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: apigateway
  name: apigateway
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: apigateway
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: apigateway
    spec:
      containers:
      - image: healthcareaksacr.azurecr.io/apigateway:v1
        imagePullPolicy: ""
        name: apigateway
        ports:
        - containerPort: 81
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: apigateway
  name: apigateway
spec:
  type: LoadBalancer
  ports:
  - name: "5018"
    port: 5018
    targetPort: 81
  selector:
    io.kompose.service: apigateway
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: doctorservice
  name: doctorservice
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: doctorservice
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: doctorservice
    spec:
      containers:
      - env:
        - name: ConnectionString
          value: ' User ID=postgres;Password=secret1234;Host=postgresdata;Port=5432;Database=postgres;'
        image: healthcareaksacr.azurecr.io/doctorservice:v1
        imagePullPolicy: ""
        name: doctorservice
        ports:
        - containerPort: 5000
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: doctorservice
  name: doctorservice
spec:
  type: LoadBalancer
  ports:
  - name: "5024"
    port: 5024
    targetPort: 5000
  selector:
    io.kompose.service: doctorservice
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: loginfunctionality
  name: loginfunctionality
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: loginfunctionality
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: loginfunctionality
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: ' Development'
        - name: RedisCacheConnection
          value: ' rediscache:6379'
        - name: WebApiBaseUrl
          value: ' http://apigateway:81/api/'
        image: healthcareaksacr.azurecr.io/loginfunctionality:v1
        imagePullPolicy: ""
        name: loginfunctionality
        ports:
        - containerPort: 80
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: loginfunctionality
  name: loginfunctionality
spec:
  type: LoadBalancer
  ports:
  - name: "5014"
    port: 5014
    targetPort: 80
  selector:
    io.kompose.service: loginfunctionality
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: loginservicedapr
  name: loginservicedapr
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: loginservicedapr
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: loginservicedapr
    spec:
      containers:
      - env:
        - name: ConnectionString
          value: ' User ID=postgres;Password=secret1234;Host=postgresdata;Port=5432;Database=postgres;'
        image: healthcareaksacr.azurecr.io/loginservicedapr:v1
        imagePullPolicy: ""
        name: loginservicedapr
        ports:
        - containerPort: 80
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: loginservicedapr
  name: loginservicedapr
spec:
  type: LoadBalancer
  ports:
  - name: "5016"
    port: 5016
    targetPort: 80
  selector:
    io.kompose.service: loginservicedapr
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: patientservice
  name: patientservice
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: patientservice
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: patientservice
    spec:
      containers:
      - env:
        - name: ConnectionString
          value: ' User ID=postgres;Password=secret1234;Host=postgresdata;Port=5432;Database=postgres;'
        image: healthcareaksacr.azurecr.io/patientservice:v1
        imagePullPolicy: ""
        name: patientservice
        ports:
        - containerPort: 81
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: patientservice
  name: patientservice
spec:
  type: LoadBalancer
  ports:
  - name: "5022"
    port: 5022
    targetPort: 81
  selector:
    io.kompose.service: patientservice
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: postgresdata
  name: postgresdata
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgresdata
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: postgresdata
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: postgres
        - name: POSTGRES_HOST
          value: postgresdata
        - name: POSTGRES_PASSWORD
          value: secret1234
        - name: POSTGRES_PORT
          value: "51036"
        - name: POSTGRES_USER
          value: postgres
        image: postgres:latest
        imagePullPolicy: ""
        name: postgresdata
        ports:
        - containerPort: 5432
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: postgresdata
  name: postgresdata
spec:
  type: LoadBalancer
  ports:
  - name: "51036"
    port: 51036
    targetPort: 5432
  selector:
    io.kompose.service: postgresdata
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: postgresqldapper
  name: postgresqldapper
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgresqldapper
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: postgresqldapper
    spec:
      containers:
      - env:
        - name: ConnectionString
          value: ' User ID=postgres;Password=secret1234;Host=postgresdata;Port=5432;Database=postgres;'
        image: healthcareaksacr.azurecr.io/postgresqldapper:v1
        imagePullPolicy: ""
        name: postgresqldapper
        ports:
        - containerPort: 5001
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: postgresqldapper
  name: postgresqldapper
spec:
  type: LoadBalancer
  ports:
  - name: "5010"
    port: 5010
    targetPort: 5001
  selector:
    io.kompose.service: postgresqldapper
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: productservice
  name: productservice
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: productservice
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: productservice
    spec:
      containers:
      - env:
        - name: ConnectionString
          value: ' User ID=postgres;Password=secret1234;Host=postgresdata;Port=5432;Database=postgres;'
        image: healthcareaksacr.azurecr.io/productservice:v1
        imagePullPolicy: ""
        name: productservice
        ports:
        - containerPort: 80
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: productservice
  name: productservice
spec:
  type: LoadBalancer
  ports:
  - name: "5020"
    port: 5020
    targetPort: 80
  selector:
    io.kompose.service: productservice
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: rediscache
  name: rediscache
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rediscache
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: rediscache
    spec:
      containers:
      - image: redis:latest
        imagePullPolicy: ""
        name: rediscache
        ports:
        - containerPort: 6379
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: rediscache
  name: rediscache
spec:
  ports:
  - name: "6379"
    port: 6379
    targetPort: 6379
  selector:
    io.kompose.service: rediscache
status:
  loadBalancer: {}


