version: '3.4'

services:
  postgresdata:
    image: postgres:latest 
    container_name: postgresdata
    restart: always
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "secret1234"
      POSTGRES_HOST: "postgresdata"
      POSTGRES_PORT: "51036"
      POSTGRES_DB: "postgres"
    ports:
    - "51036:5432"

  rediscache:
    image: redis:latest
    container_name: rediscache
    restart: always
    ports: 
    - "6379:6379"

  postgresqldapper:
    image: ${DOCKER_REGISTRY-}postgresqldapper
    container_name: postgresqldapper
    environment: 
        - ConnectionString= User ID=postgres;Password=secret1234;Host=postgresdata;Port=5432;Database=postgres;
    ports:
      - "5010:5001"
    build:
      context: .
      dockerfile: PostGresqlDapper/Dockerfile      
    depends_on:
      - postgresdata
 
  loginservicedapr:
    image: ${DOCKER_REGISTRY-}loginservicedapr
    container_name: loginservicedapr
    environment: 
        - ConnectionString= User ID=postgres;Password=secret1234;Host=postgresdata;Port=5432;Database=postgres;
    ports:
      - "5016:80"
    build:
      context: .
      dockerfile: LoginServiceDapr/Dockerfile      
    depends_on:
      - postgresdata

  patientservice:
    image: ${DOCKER_REGISTRY-}patientservice
    container_name: patientservice
    environment: 
        - ConnectionString= User ID=postgres;Password=secret1234;Host=postgresdata;Port=5432;Database=postgres;
    ports:
      - "5022:81"
    build:
      context: .
      dockerfile: PatientService/Dockerfile      
    depends_on:
      - postgresdata

  productservice:
    image: ${DOCKER_REGISTRY-}productservice
    container_name: productservice
    environment: 
        - ConnectionString= User ID=postgres;Password=secret1234;Host=postgresdata;Port=5432;Database=postgres;
    ports:
      - "5020:80"
    build:
      context: .
      dockerfile: ProductService/Dockerfile      
    depends_on:
      - postgresdata

  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    container_name: apigateway
    ports:
      - "5018:81"
    build:
      context: .
      dockerfile: APIGateway/Dockerfile      
    depends_on:
      - postgresqldapper
      - loginservicedapr
      - productservice
      - patientservice

  loginfunctionality:
    image: ${DOCKER_REGISTRY-}loginfunctionality
    container_name: loginfunctionality
    environment: 
        - WebApiBaseUrl= http://apigateway:81/api/
        - RedisCacheConnection= rediscache:6379
        - ASPNETCORE_ENVIRONMENT= Development
    ports:
      - "5014:80"
    build:
      context: .
      dockerfile: LoginFunctionality/Dockerfile      
    depends_on:
      - apigateway
    links:
      - rediscache
      
